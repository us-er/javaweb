<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.BlogMapper" >
  <resultMap id="BaseResultMap" type="com.blog.bean.Blog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="typeid" property="typeid" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="blogger_id" property="bloggerId" jdbcType="INTEGER" />
    <result column="likenum" property="likenum" jdbcType="INTEGER" />
    <result column="cellnum" property="cellnum" jdbcType="INTEGER" />
    
    
    <association property="blogTitle" column="blog_id"
    	select="com.blog.mapper.BlogMapper.selectTitleByBlogid"
     ></association>
    <association property="type" column="typeid"
    	select="com.blog.mapper.BlogTypeMapper.selectByPrimaryKey"
     ></association>
    <association property="blogger" column="blogger_id"
    	select="com.blog.mapper.BloggerMapper.selectByPrimaryKey"
     ></association>
     
    <collection property="imgs" column="id"
    	select="com.blog.mapper.BlogImgMapper.selectImageByBid"
    ></collection>
    <collection property="comments" column="id"
    	select="com.blog.mapper.BlogCommentMapper.selectCommentByBid"
    ></collection>
  </resultMap>
  <!-- property是Java类中的变量    column是字段名入参的数据   select调用另一条sql语句-->
  
  <resultMap id="ResultMapWithBLOBs" type="com.blog.bean.Blog" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <!-- 根据博客id	查询博客的标题 -->
  <select id="selectTitleByBlogid" parameterType="Integer" resultType="String">
  	select title from blog where id=#{id}
  </select>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, typeid, createdate, blogger_id, likenum, cellnum
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.blog.bean.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blog.bean.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.bean.BlogExample" >
    delete from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.bean.Blog" 
  useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
    insert into blog (id, title, typeid, 
      createdate, blogger_id, likenum, 
      cellnum, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{createdate,jdbcType=TIMESTAMP}, #{bloggerId,jdbcType=INTEGER}, #{likenum,jdbcType=INTEGER}, 
      #{cellnum,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.bean.Blog" 
  useGeneratedKeys="true" keyColumn="id" keyProperty="id" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="bloggerId != null" >
        blogger_id,
      </if>
      <if test="likenum != null" >
        likenum,
      </if>
      <if test="cellnum != null" >
        cellnum,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="bloggerId != null" >
        #{bloggerId,jdbcType=INTEGER},
      </if>
      <if test="likenum != null" >
        #{likenum,jdbcType=INTEGER},
      </if>
      <if test="cellnum != null" >
        #{cellnum,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.bean.BlogExample" resultType="java.lang.Integer" >
    select count(*) from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bloggerId != null" >
        blogger_id = #{record.bloggerId,jdbcType=INTEGER},
      </if>
      <if test="record.likenum != null" >
        likenum = #{record.likenum,jdbcType=INTEGER},
      </if>
      <if test="record.cellnum != null" >
        cellnum = #{record.cellnum,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      typeid = #{record.typeid,jdbcType=INTEGER},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      blogger_id = #{record.bloggerId,jdbcType=INTEGER},
      likenum = #{record.likenum,jdbcType=INTEGER},
      cellnum = #{record.cellnum,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      typeid = #{record.typeid,jdbcType=INTEGER},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      blogger_id = #{record.bloggerId,jdbcType=INTEGER},
      likenum = #{record.likenum,jdbcType=INTEGER},
      cellnum = #{record.cellnum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.bean.Blog" >
    update blog
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="bloggerId != null" >
        blogger_id = #{bloggerId,jdbcType=INTEGER},
      </if>
      <if test="likenum != null" >
        likenum = #{likenum,jdbcType=INTEGER},
      </if>
      <if test="cellnum != null" >
        cellnum = #{cellnum,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.bean.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      blogger_id = #{bloggerId,jdbcType=INTEGER},
      likenum = #{likenum,jdbcType=INTEGER},
      cellnum = #{cellnum,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.bean.Blog" >
    update blog
    set title = #{title,jdbcType=VARCHAR},
      typeid = #{typeid,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      blogger_id = #{bloggerId,jdbcType=INTEGER},
      likenum = #{likenum,jdbcType=INTEGER},
      cellnum = #{cellnum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>